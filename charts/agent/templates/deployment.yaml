apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
spec:
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: agent
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: agent
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: AGENT_ID
          value: {{ .Values.settings.agentId }}
        - name: HOST_ADDR
          value: {{ .Values.settings.backendAddr }}
        - name: TUNNEL_ADDR
          value: {{ .Values.settings.tunnelAddr }}
        - name: TUNNEL_HOST
          value: {{ required "settings.id required" .Values.settings.id }}
        - name: CORS_DEBUG
          value: {{ .Values.cors.debug | quote }}
        ports:
        - containerPort: 8081
          protocol: TCP
          name: http-metrics
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
          - mountPath: "/etc/backend/ssl"
            name: cert-volume
            readOnly: true
      volumes:
      - name: cert-volume
        secret:
          secretName: client-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
